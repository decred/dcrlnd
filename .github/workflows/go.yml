name: Build and Test
on: [push, pull_request]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [1.12, 1.13]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}

      - name: Check out source
        uses: actions/checkout@v1

      - name: Install Linters
        run: "curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.21.0"

      - name: Build
        env:
          GO111MODULE: "on"
        run: go build ./...

      - name: Lint
        env:
          GO111MODULE: "on"
        run: |
          export PATH=${PATH}:$(go env GOPATH)/bin
          golangci-lint run --build-tags "chainrpc invoicesrpc signrpc watchtowerrpc wtclientrpc" --disable-all --deadline=10m --skip-files="mobile\\/.*generated\\.go" --enable=gofmt --enable=vet --enable=gosimple --enable=unconvert --enable=ineffassign --enable=unused

      - name: Package test binaries
        run: |
          export GOPATH=$(go env GOPATH)
          make package-test-binaries

      - name: Upload test binaries
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.go }}-test-binaries
          path: dcrlnd_testbins.tar.gz

  testsuite:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go: [1.13]
        testsuite: ["unit-race", "itest-only", "itest-only walletimpl=remotewallet"]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}

      - name: Check out source
        uses: actions/checkout@v1

      - name: Download the test binaries
        uses: actions/download-artifact@v1
        with:
          name: ${{ matrix.go }}-test-binaries

      - name: Unpack the test binaries
        run: |
          export GOPATH=$(go env GOPATH)
          mv ${{ matrix.go }}-test-binaries/* .
          make unpack-test-binaries

      - name: Run the test suite
        env:
          GO111MODULE: "on"
        run: |
          export GOPATH=$(go env GOPATH)
          export PATH=${PATH}:$(go env GOPATH)/bin
          make ${{ matrix.testsuite }}

      - name: Compress log files
        if: always()
        env:
          ITEST_LOG_FILES: "./lntest/itest/*.log"
          LNWALLET_LOG_FILES: "./lnwallet/*.log"
        run: |
          tar --ignore-failed-read -czf output-logs.tar.gz $ITEST_LOG_FILES $LNWALLET_LOG_FILES

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.go }}-${{ matrix.testsuite }}-logs.tar.gz
          path: output-logs.tar.gz


