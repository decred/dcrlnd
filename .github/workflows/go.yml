name: Build and Test
on: [push, pull_request]
permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ['1.21', '1.22']
    steps:
      - name: Set up Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 #v5.0.0
        with:
          go-version: ${{ matrix.go }}

      - name: Check out source
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1

      - name: Install Linters
        run: "go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.56.0"

      - name: Check golangci-lint version
        run: golangci-lint --version

      - name: Build
        run: go build ./...

      - name: Lint
        run: |
          golangci-lint run --out-format=github-actions

      - name: Package test binaries
        run: |
          export GOPATH=$(go env GOPATH)
          make package-test-binaries

      - name: Upload test binaries
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 #v4.6.0
        with:
          name: ${{ matrix.go }}-test-binaries
          path: dcrlnd_testbins.tar.gz

  testsuite:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go: ['1.21']
        testsuite:
          - unit-race # unit tests
          - itest-parallel-run # embedded wallet using dcrd for sync and chain ops
          - itest-parallel-run walletimpl=embeddedwallet_dcrw # embedded wallet, dcrd sync but dcrw chain ops
          - itest-parallel-run walletimpl=embeddedwallet_dcrw backend=spv # embedded wallet, spv sync and dcrw chain ops
          - itest-parallel-run walletimpl=remotewallet # remote wallet dcrd sync
          - itest-parallel-run walletimpl=remotewallet backend=spv # remote wallet spv sync
    steps:
      - name: Set up Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 #v5.0.0
        with:
          go-version: ${{ matrix.go }}

      - name: Check out source
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1

      - name: Download the test binaries
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 #v4.1.8
        with:
          name: ${{ matrix.go }}-test-binaries
          path: ${{ matrix.go }}-test-binaries

      - name: Unpack the test binaries
        run: |
          export GOPATH=$(go env GOPATH)
          mv ${{ matrix.go }}-test-binaries/* .
          make unpack-test-binaries

      - name: Run the test suite
        run: |
          export GOPATH=$(go env GOPATH)
          export PATH=${PATH}:$(go env GOPATH)/bin
          make ${{ matrix.testsuite }}

      - name: Compress log files
        if: always()
        run: |
          find . -iname *.log | tar -T - --ignore-failed-read -czf output-logs.tar.gz

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 #v4.6.0
        with:
          name: ${{ matrix.go }}-${{ matrix.testsuite }}-logs.tar.gz
          path: output-logs.tar.gz


